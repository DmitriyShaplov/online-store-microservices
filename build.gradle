plugins {
    id 'java'
    id 'java-library'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '3.0.5'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    group = 'ru.shaplov'
    version = '0.0.1'
    sourceCompatibility = '17'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.0.5"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.1"
        }
    }

    springBoot {
        buildInfo()
    }

    dependencies {
        api 'org.springframework.boot:spring-boot-starter-web'
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
        api 'org.springframework.boot:spring-boot-starter-actuator'
        api 'org.springframework.boot:spring-boot-starter-validation'
        api 'org.springframework.boot:spring-boot-starter-security'
        api 'org.springframework.kafka:spring-kafka'
        api 'org.springframework.security:spring-security-oauth2-resource-server'
        api 'org.springframework.security:spring-security-oauth2-jose'
        api 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.1'
        api 'org.modelmapper:modelmapper:3.1.0'
        api 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
        api 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
        api 'io.micrometer:micrometer-tracing-bridge-brave'
//    //need for EdDSA crypto
//    implementation 'com.google.crypto.tink:tink:1.7.0'

        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
        compileOnly 'org.projectlombok:lombok'
        api 'io.micrometer:micrometer-registry-prometheus'
        api 'org.postgresql:postgresql'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.springframework.boot:spring-boot-starter-test'
        testCompileOnly 'org.springframework.security:spring-security-test'
        testCompileOnly 'com.h2database:h2'
    }
}

