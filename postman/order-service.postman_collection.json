{
	"info": {
		"_postman_id": "9a7a413c-17c7-4a83-b8cb-41049f4bc959",
		"name": "OTUS Order-service interaction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "register user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateRandomString(length) {",
							"    let result = \"\";",
							"    let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";",
							"    let charactersLength = characters.length;",
							"    for (let i = 0; i < length; i++) {",
							"        result += characters.charAt(Math.floor(Math.random() * charactersLength));",
							"    }",
							"    return result;",
							"}",
							"function randomNumericString(length) {",
							"  var result = \"\";",
							"  for (var i = 0; i < length; i++) {",
							"    result += Math.floor(Math.random() * 10);",
							"  }",
							"  return result;",
							"}",
							"",
							"pm.variables.set(\"randomNumber\", randomNumericString(10));",
							"pm.environment.set(\"user1Login\", generateRandomString(8));",
							"pm.environment.set(\"user1Username\", generateRandomString(8));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User 1 registered\", function() {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");  ",
							"});",
							"pm.environment.set(\"profile_id\", pm.response.json().id);",
							"pm.environment.set(\"username1\", pm.response.json().username);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{host}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{user1Login}}\",\n  \"password\": \"secretpassword\",\n  \"profile\": {\n    \"username\": \"{{user1Username}}\",\n    \"firstName\": \"firstName1\",\n    \"lastName\": \"lastName1\",\n    \"email\": \"testmail1@mail.ru\",\n    \"phone\": \"+{{randomNumber}}\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(pm.variables.get(\"user1Login\"));",
							"pm.test(\"User 1 logged in\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{host}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"{{user1Login}}\",\n    \"password\": \"secretpassword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"order_id\", pm.variables.replaceIn(\"{{$guid}}\"));\r",
							"pm.environment.set(\"product_id\", pm.variables.replaceIn(\"{{$guid}}\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order created\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.shippingAddress).to.eql(\"123 Main St, Anytown USA\");\r",
							"    pm.expect(responseJson.orderStatus).to.eql(\"DRAFT\");  \r",
							"});\r",
							"pm.environment.set(\"orderHash\", pm.response.json().orderHash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{host}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"{{order_id}}\",\r\n  \"profileId\": 12345,\r\n  \"shippingAddress\": \"123 Main St, Anytown USA\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 4,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": 1204032829\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order (same UUID)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order already exists\", function() {\r",
							"    pm.expect(pm.response.code).to.be.eq(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"{{order_id}}\",\r\n  \"profileId\": 12345,\r\n  \"shippingAddress\": \"123 Main St, Anytown USA\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 4,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": 1204032829\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order (Wrong hash)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.variables.get(\"orderHash\"));\r",
							"pm.environment.set(\"fake_hash\", pm.variables.get(\"orderHash\") - 1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong orderHash\", function() {\r",
							"    pm.expect(pm.response.code).to.be.eq(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"shippingAddress\": \"new shipping address\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 5,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": {{fake_hash}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order (not changed)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"uuid\", pm.variables.replaceIn(\"{{$guid}}\"));\r",
							"pm.environment.set(\"product_id\", pm.variables.replaceIn(\"{{$guid}}\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order created\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.shippingAddress).to.eql(\"123 Main St, Anytown USA\"); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"profileId\": 12345,\r\n  \"shippingAddress\": \"123 Main St, Anytown USA\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 5,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": -484851750\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order changed\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.shippingAddress).to.eql(\"new shipping address\"); \r",
							"});\r",
							"pm.environment.set(\"orderHash\", pm.response.json().orderHash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"shippingAddress\": \"new shipping address\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 5,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": {{orderHash}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order (second request same hash)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong orderHash\", function() {\r",
							"    pm.expect(pm.response.code).to.be.eq(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"shippingAddress\": \"new shipping address\",\r\n  \"productId\": \"{{product_id}}\",\r\n  \"quantity\": 5,\r\n  \"currentItemPrice\": 2,\r\n  \"orderHash\": {{fake_hash}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cancel Order (wrong hash)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong orderHash\", function() {\r",
							"    pm.expect(pm.response.code).to.be.eq(409);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}/cancel?orderHash={{fake_hash}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}",
						"cancel"
					],
					"query": [
						{
							"key": "orderHash",
							"value": "{{fake_hash}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cancel Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order canceled\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.shippingAddress).to.eql(\"new shipping address\"); \r",
							"    pm.expect(responseJson.orderStatus).to.eql(\"CANCELLED\"); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{order_id}}/cancel?orderHash={{orderHash}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{order_id}}",
						"cancel"
					],
					"query": [
						{
							"key": "orderHash",
							"value": "{{orderHash}}"
						}
					]
				}
			},
			"response": []
		}
	]
}