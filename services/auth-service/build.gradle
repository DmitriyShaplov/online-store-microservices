plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'ru.shaplov'
version = '1.10'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
    exclude group: 'org.springframework.security', module: 'spring-security-oauth2-resource-server'
    exclude group: 'org.springframework.security', module: 'spring-security-oauth2-jose'
}

repositories {
    mavenLocal()
    mavenCentral()
}

springBoot   {
    mainClass = 'ru.shaplov.authservice.AuthServiceApplication'
}

jar.enabled=true

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
    implementation 'org.springframework.security:spring-security-crypto:6.0.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.2'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.27'
//    //need for EdDSA crypto
//    implementation 'com.google.crypto.tink:tink:1.7.0'

    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from {
        image = 'openjdk:17-jdk-alpine'
        auth {
            username = dockerHubUsername
            password = dockerHubPassword
        }
    }
    to {
        image = "shaplovdv/${project.name}:${project.version}"
        auth {
            username = dockerHubUsername
            password = dockerHubPassword
        }
    }
}